<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/main.css" />
    <title>EJS 사용해서 list페이지 만듬</title>
  </head>
  <body class="grey-bg">
    <!-- include : 'nav.ejs파일을 그대로 가져와서 사용해주세요.' 라는 문법 -->
    <%- include('nav.ejs') %>

    <div class="white-bg">
      <% for (let i=0; i < list.length; i++){ %>
      <div class="list-box">
        <h4>
          <a href="/detail/<%= list[i]._id %>"><%= list[i].title %></a>
          <a href="/edit/<%= list[i]._id %>">✏️</a>
          <span class="delete" data-id="<%= list[i]._id %>">🗑️</span>
        </h4>
        <p><%= list[i].content %></p>
      </div>
      <% } %>
    </div>

    <!-- 
        ejs 중요 문법 3가지
        1. <% %> == html 사이에 자바스크립트 문법 사용할 때
        2. <%- %> == include같은 문법 사용할 때
        3. <%= %> == html태그를 실제 태그가 아닌 string으로 변환해서 만들어줌
    -->

    <!-- 
      ajax를 사용해서 새로고침 없이 request하기
      1. script를 열어서 addEventListener 콜백함수에 fetch함수 사용 >> fetch함수에 url을 적으면 서버에 get요청을 날려줌
      2. 두번째 파라미터에 객체문법으로 method 지정가능 >> method : 'PUT'
      3. ajax로 데이터를 전송하고 싶으면?
        headers : {'Content-Type' : 'application/json '},
        body : 데이터들 >> obj,arr를 보내고 싶으면 JSON.stringify({title : nike}) 처럼 보내주셈

      ps. query문법으로 데이터 넣기
        url?데이터명=데이터값 >> /abc?name=dongmin
          &기호로 여러 데이터를 보낼 수 있음 >> /abc?name=dongmin&age=29
        
        server에서 query문법으로 보낸 데이터 출력은 req.query로 가능
     -->

     <!-- 
      문제 발생 : JS에서 선언한 변수 i는 ejs문법에서 읽을 수가 없음
      해결 : for문을 ejs로 작성하고, 나머지 js는 script에 작성함.
            변수 i는 ejs에서 선언하였으므로 ejs문법으로 중간에 사용!
    -->
     <% for (let i=0; i < list.length;i++){ %>
     <script>
        console.log(<%=i%>)
        document.querySelectorAll('.delete')[<%=i%>].addEventListener('click', function(e){
          let datasetId = e.target.dataset.id
          console.log(datasetId)
          // fetch('/delete?docid=' + datasetId, { << data-set 활용해서 지우기!
          // 글을 정렬하거나, 순서를 변경한다면 아래 list arr의 순번대로 delete를 할 경우 꼬일 수 있기 때문에
          // data-set을 활용해 처리하는 것이 훨씬 정확할 수 있다!
          fetch('/delete?docid=<%= list[i]._id %>', {
            method : 'DELETE'
          })
        })
      </script>
      <% } %>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
